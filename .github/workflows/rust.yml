name: Rust

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --workspace
        env:
          RUST_BACKTRACE: 1
  
  test-all-features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-features
        env:
          RUST_BACKTRACE: 1
  
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
  
  readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker://ghcr.io/msrd0/cargo-doc2readme
        with:
          entrypoint: ./readme.sh
          args: --check
  
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - name: Get Rust Version
        id: rust
        run: echo "::set-output name=VERSION::$(cargo -V | head -n1 | awk '{print $2}')"
      - name: Get Tarpaulin Version
        id: tarpaulin
        run: echo "::set-output name=version::$(wget -qO- 'https://crates.io/api/v1/crates/cargo-tarpaulin' | jq -r '.crate.max_stable_version')"
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/cargo-tarpaulin
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{runner.os}}-cargo-${{steps.rust.outputs.version}}-tarpaulin-${{steps.tarpaulin.outputs.version}}
      - name: Install Tarpaulin
        run: test -e ~/.cargo/bin/cargo-tarpaulin || cargo install cargo-tarpaulin --version ${{steps.tarpaulin.outputs.version }}
      - name: Run Tarpaulin coverage tests
        run: |
          cargo tarpaulin -v \
            --target-dir target/tarpaulin \
            --exclude-files 'target/*' \
            --ignore-panics \
            --ignore-tests \
            --out Html \
            --out Json
        env:
          RUST_BACKTRACE: 1
      - uses: actions/upload-artifact@v2
        with:
          name: tarpaulin-report
          path: |
            tarpaulin-report.json
            tarpaulin-report.html
  
  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo doc --no-deps
        env:
          RUSTDOCFLAGS: "--default-theme ayu"
      - run: tar cf - target/doc/ | zstd -3 >rustdoc.tar.zst
      - uses: actions/upload-artifact@v2
        with:
          name: rustdoc
          path: rustdoc.tar.zst
  
  pages:
    runs-on: ubuntu-latest
    needs: [coverage, doc]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - uses: actions/download-artifact@v2
        with:
          name: rustdoc
      - uses: actions/download-artifact@v2
        with:
          name: tarpaulin-report
      - name: Extract rustdoc
        run: |
          test ! -d ./doc || rm -r ./doc
          cat rustdoc.tar.zst | zstd -d | tar xf - --strip-components=1
          rm rustdoc.tar.zst
      - name: Create coverage badge
        run: |
          coverage=$(jq '.files | { covered: map(.covered) | add, coverable: map(.coverable) | add } | .covered / .coverable * 10000 | round | . / 100' tarpaulin-report.json)
          color=$([[ $coverage < 80 ]] && printf yellow || printf brightgreen)
          wget -qO coverage.svg "https://img.shields.io/badge/coverage-$coverage%25-$color"
      - run: git status
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "GitHub Pages for ${{github.sha}}"
          commit_user_name: "GitHub Actions"
          commit_user_email: "actions@github.com"
          commit_author: "GitHub Actions <actions@github.com>"
  