(function() {var implementors = {};
implementors["serde_sexpr"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"serde_sexpr/struct.Literal.html\" title=\"struct serde_sexpr::Literal\">Literal</a>","synthetic":true,"types":["serde_sexpr::literal::Literal"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"serde_sexpr/struct.Option.html\" title=\"struct serde_sexpr::Option\">OptionDef</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a>,&nbsp;</span>","synthetic":true,"types":["serde_sexpr::option::OptionDef"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"serde_sexpr/de/enum.ErrorKind.html\" title=\"enum serde_sexpr::de::ErrorKind\">ErrorKind</a>","synthetic":true,"types":["serde_sexpr::de::error::ErrorKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"serde_sexpr/de/struct.Error.html\" title=\"struct serde_sexpr::de::Error\">Error</a>","synthetic":true,"types":["serde_sexpr::de::error::Error"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"serde_sexpr/de/struct.Deserializer.html\" title=\"struct serde_sexpr::de::Deserializer\">Deserializer</a>&lt;'de&gt;","synthetic":true,"types":["serde_sexpr::de::Deserializer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"serde_sexpr/ser/enum.Error.html\" title=\"enum serde_sexpr::ser::Error\">Error</a>","synthetic":true,"types":["serde_sexpr::ser::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.0/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"serde_sexpr/ser/struct.Serializer.html\" title=\"struct serde_sexpr::ser::Serializer\">Serializer</a>","synthetic":true,"types":["serde_sexpr::ser::Serializer"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()